rules:
  # 1) No eval
  - id: js-no-eval-demo
    message: Avoid eval(...) â€” executes arbitrary code
    severity: MEDIUM
    languages: [javascript, typescript]
    pattern: eval($X)

  # 2) Off-by-one: <= array.length inside for-loop
  - id: js-off-by-one-loop
    message: Loop iterates one past the end (use i < array.length).
    severity: HIGH
    languages: [javascript, typescript]
    patterns:
      - pattern: |
          for (let $I = 0; $I <= $ARR.length; $I++) {
            ...
          }

  # 3) Possible null/undefined dereference of .length
  #    (broad on purpose for the demo)
  - id: js-null-deref-length
    message: Potential null/undefined access before reading .length
    severity: MEDIUM
    languages: [javascript, typescript]
    pattern: $X.length

  # 4) REDoS-prone regex /(a+)+$/
  - id: js-redos-a-plus-nested
    message: Potential catastrophic backtracking in /(a+)+$/
    severity: HIGH
    languages: [javascript, typescript]
    pattern-either:
      - pattern: /^(a+)+$/
      - pattern: new RegExp("^(a+)+$")
